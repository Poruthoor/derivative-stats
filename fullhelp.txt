This tool takes arbitrary numbers of files containing your Free Energy Curves (FECs) and computes their derivatives numerically. It then computes the standard deviation of the derivative at each point along the curve, writing those values to a specified output file. It will optionally alsonumerically re-integrate segments of the curve, then compute their standard deviation, to associate each segment with an accumulation of variance across that segment. The edges of these segments are user specified, though the customary use for them would be integrating over each window from which the curve is built to associate accumulations of variance to particular window positions along the reaction coordinate.

This tool computes the numerical derivative as implemented in the numpy gradient method, which is an order 2 accurate method for numerical differentiation that uses forward/backward methods for the boundary points so the gradient has the same number of elements as the input. It uses the scipy implementation of Simpson's method to integrate the curve segments, if they are provided by the user. 

This tool can optionally compute the standard deviation from a best estimate that is not the mean of the data, and can also save the raw derivatives trace. If these behaviors are desired, inspect the flags section

SAMPLE INPUTS.
The simplest possible command line might have nothing on it other than the free energy curves you'd like to compare:

./derivative-stats.py curve-1.dat curve-2.dat curve-3.dat

If you run this command again you'll find you get an error; this is a safety built in to prevent your overwriting files you've created previously using this script in a blind fashion. To switch the safety off, throw the O fla:

./derivative-stats.py --overwrite curve-1.dat curve-2.dat curve-3.dat

where the curve-i.dat files are placeholders for the files containing the FECs. To change the prefix for this file, add the --prefix flag:

./derivative-stats.py --prefix example curve-1.dat curve-2.dat curve-3.dat

If you ran this command, you should get a file called example-sd.dat because dstats is the default prefix but you've supplied your own.

This tool takes arbitrary numbers of files containing your Free Energy Curves
(FECs) and computes their derivatives numerically. It then computes the
standard deviation of the derivative at each point along the curve, writing
those values to a specified output file. It will optionally alsonumerically
re-integrate segments of the curve, then compute their standard deviation, to
associate each segment with an accumulation of variance across that segment.
The edges of these segments are user specified, though the customary use for
them would be integrating over each window from which the curve is built to
associate accumulations of variance to particular window positions along the
reaction coordinate.

This tool computes the numerical derivative as implemented in the numpy
gradient method, which is an order 2 accurate method for numerical
differentiation that uses forward/backward methods for the boundary points so
the gradient has the same number of elements as the input. It uses the scipy
implementation of Simpson's method to integrate the curve segments, if they
are provided by the user.

This tool can optionally compute the standard deviation from a best estimate
that is not the mean of the data, and can also save the raw derivatives
trace. If these behaviors are desired, inspect the flags section

SAMPLE INPUTS. The simplest possible command line might have nothing on it
other than the free energy curves you'd like to compare:

./derivative-stats.py curve-1.dat curve-2.dat curve-3.dat

If you run this command again you'll find you get an error; this is a safety
built in to prevent your overwriting files you've created previously using
this script in a blind fashion. To switch the safety off, throw the O fla:

./derivative-stats.py --overwrite curve-1.dat curve-2.dat curve-3.dat

where the curve-i.dat files are placeholders for the files containing the
FECs. To change the prefix for this file, add the --prefix flag:

./derivative-stats.py --prefix example curve-1.dat curve-2.dat curve-3.dat

If you ran this command, you should get a file called example-sd.dat because
dstats is the default prefix but you've supplied your own.